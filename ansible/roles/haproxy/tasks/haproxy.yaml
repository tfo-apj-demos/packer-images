- name: Check if HAProxy is installed
  command: haproxy -v
  register: haproxy_version
  ignore_errors: true

- name: Set HAProxy installation status
  set_fact:
    haproxy_installed: "{{ haproxy_version.rc == 0 }}"
  when: haproxy_version.stdout is defined

- block:
    - name: Create Directory in opt
      file:
        path: "{{ item }}"
        state: directory
      with_items:
        - "{{ haproxy_global.home_dir }}"
        - "{{ haproxy_global.home_dir }}/config"
      when: haproxy_installed == false

    - name: Add docker-compose and config toml files
      template:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
      loop:
        - src: docker-compose.yaml.j2
          dest: "{{ haproxy_global.home_dir }}/docker-compose.yaml"
        - src: haproxy.cfg.j2
          dest: "{{ haproxy_global.home_dir }}/config/haproxy.cfg"

    - name: Run docker compose
      command: chdir='{{ haproxy_global.home_dir }}' docker compose up -d --force-recreate

    # - name: restart docker container gracfully
    #   command: docker kill -s HUP haproxy
  when: haproxy_install_type == 'docker-compose'

- block:
    - block:
        - name: Add HAProxy repository key
          ansible.builtin.apt_repository:
            repo: ppa:vbernat/haproxy-{{haproxy_global.version}}
            update_cache: yes

        - name: Install HAProxy
          apt:
            name: haproxy
            state: latest
      when: haproxy_installed == false

    - name: Copy HAProxy configuration in place.
      template:
        src: haproxy.cfg.j2
        dest: /etc/haproxy/haproxy.cfg
        mode: 0644
        validate: haproxy -f %s -c -q
      notify: haproxy restart
  when: haproxy_install_type == 'service'
